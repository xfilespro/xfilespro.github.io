{"version":3,"sources":["Onboard/BoardForm.jsx","Onboard/BoardFm.jsx","Onboard/Onboard.jsx","Onboard/index.js","App.js","index.js"],"names":["BoardForm","stuff","Form","useForm","form","useState","bnstate","setBnstate","onFinish","a","proaddr","window","ethereum","web3","Web3","xcontr","eth","Contract","x","fork","f","methods","approve","utils","parseEther","toString","send","from","accountf","trt","console","log","JSON","stringify","invest","makeStyles","gridYhu","paddingLeft","paddingRight","backgroundColor","gridS","margin","cardDescriptionplus","color","fontFamily","fontSize","cardDescription","fontWeight","cardDescriptmark2","card","buttonx","backgroundcolor","bordercolor","uStyles","labelCol","span","wrapperCol","name","initialValues","Item","label","colon","htmlType","type","id","disabled","shape","size","onClick","request","method","then","result","setConngoes","catch","error","code","rules","required","placeholder","conngoes","LoginOutlined","Stuff_up","Content","Layout","Onboard","style","height","padding","title","avatar","icon","DashboardTwoTone","BoardFm","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e25701d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\nimport { Form, Input } from \"antd\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from 'react'\nimport Web3 from 'web3'\nimport {utils} from 'ethers'\nimport moment from 'moment'\nimport x from \"../assets/abi/x.json\"\nimport f from \"../assets/abi/f.json\"\n// sensible defaults\nconst DEFAULT_PROADDR = \"950\";\n\nfunction BoardForm(stuff) {\n  const [form] = Form.useForm();\n  const initialValues = {};\n  const [bnstate, setBnstate] = useState(false);\n  function activate() {\n  \tconst {ethereum} = window;\n    ethereum.request({ method: 'eth_requestAccounts' })\n      .then((result)=>{window.accountf = result; stuff.setConngoes(!false);})\n      .catch((error) => {\n        setBnstate(false);    \n        if (error.code === 4001) {\n          // EIP-1193 userRejectedRequest error\n          console.log('Please connect to MetaMask.');\n        } else {\n          console.error(error);\n        }\n      });\n  }\n\n  const onconnect = ()=>{\n    setBnstate(!false);\n    activate();\n  }\n\n  const onFinish = async ({proaddr})=>{\n    const {ethereum} = window;    \n    window.web3 = new Web3(ethereum);\n    const xcontr = new window.web3.eth.Contract(x, /*avalanche*/ '0xC903F825a42EBD01a127D93A9E697850c47e00F0');\n    const fork = new window.web3.eth.Contract(f, '0x7aFd2BBC25318fD228ED10caDe190A29C22D7337');\n\n    let trt = await xcontr.methods.approve('0x7aFd2BBC25318fD228ED10caDe190A29C22D7337', utils.parseEther('490').toString()).send({from: window.accountf[0]});\n    console.log(JSON.stringify(trt));\n    trt = await fork.methods.invest(utils.parseEther(proaddr).toString()).send({from: window.accountf[0]});\n    console.log(JSON.stringify(trt));\n  }\n\n  const uStyles = makeStyles({\n    gridYhu: {\n      paddingLeft :'7px',\n      paddingRight :'7px',\n      backgroundColor: '#F0F2F5',\n    },\n    gridS: {\n      backgroundColor: '#ECECFF',\n      margin: 4,\n    },\n    cardDescriptionplus: {\n      color: '#8381BE',\n      fontFamily: 'Arial',\n      paddingLeft :'7px',      \n      fontSize: '15px',\n//      fontWeight: 300,\n    },\n    cardDescription: {\n      color: 'slategrey',\n      fontFamily: 'Arial',\n      paddingLeft :'14px',\n      fontSize: '13px',\n      fontWeight: 700,\n    },\n    cardDescriptmark2: {\n      color: 'slategrey',\n      paddingLeft :'7px',      \n      fontSize: '10px'\n    },\n    card: {\n      color: '#06F701',\n      fontFamily: 'Arial',\n      paddingLeft :'2px',   \n      fontWeight: 550,\n      fontSize: '13px'\n    },\n    buttonx: {\n      backgroundcolor: '#8381BE',\n      bordercolor: '#8381BE'\n    },\n  });\n\n  const classes = uStyles();\n\n  return (\n    <Form\n      labelCol={{ span: 7 }}\n      wrapperCol={{ span: 37 }}\n      form={form}\n      name=\"onboard\"\n      initialValues={initialValues}\n      onFinish={onFinish}\n    >\n\n      {/* token and ref */}\n      <Form.Item label=\" \" colon={false}>\n        <Button htmlType=\"button\" type=\"primary\" id=\"turf-button\" disabled={bnstate} shape=\"round\" size=\"small\" onClick={onconnect}>\n          connect to metamask\n        </Button>\n      </Form.Item>\n\n      <Form.Item name=\"proaddr\" label=\"inv\" rules={[{ required: false }]}>\n        <Input placeholder={DEFAULT_PROADDR} />\n      </Form.Item>\n\n      {/* Submit */}\n      <Form.Item label=\" \" colon={false}>\n        <Button type=\"primary\" disabled={!stuff.conngoes} htmlType=\"submit\">\n          <LoginOutlined />\n          Submit and sign\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default BoardForm;\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { Form, Input } from \"antd\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from 'react'\nimport Web3 from 'web3'\nimport {utils} from 'ethers'\nimport moment from 'moment'\nimport x from \"../assets/abi/x.json\"\nimport f from \"../assets/abi/f.json\"\n// sensible defaults\nconst DEFAULT_PROADDR = \"950\";\n\nfunction BoardForm(stuff) {\n  const [form] = Form.useForm();\n  const initialValues = {};\n\n  const onFinish = async ({proaddr})=>{\n    const {ethereum} = window;    \n    window.web3 = new Web3(ethereum);\n    const xcontr = new window.web3.eth.Contract(x, /*avalanche*/ '0xC903F825a42EBD01a127D93A9E697850c47e00F0');\n    const fork = new window.web3.eth.Contract(f, '0x7aFd2BBC25318fD228ED10caDe190A29C22D7337');\n\n    let trt = await xcontr.methods.approve('0x7aFd2BBC25318fD228ED10caDe190A29C22D7337', utils.parseEther('490').toString()).send({from: window.accountf[0]});\n    console.log(JSON.stringify(trt));\n    trt = await fork.methods.Stuff_up(utils.parseEther(proaddr).toString()).send({from: window.accountf[0]});\n    console.log(JSON.stringify(trt));\n  }\n\n  const uStyles = makeStyles({\n    gridYhu: {\n      paddingLeft :'7px',\n      paddingRight :'7px',\n      backgroundColor: '#F0F2F5',\n    },\n    gridS: {\n      backgroundColor: '#ECECFF',\n      margin: 4,\n    },\n    cardDescriptionplus: {\n      color: '#8381BE',\n      fontFamily: 'Arial',\n      paddingLeft :'7px',      \n      fontSize: '15px',\n//      fontWeight: 300,\n    },\n    cardDescription: {\n      color: 'slategrey',\n      fontFamily: 'Arial',\n      paddingLeft :'14px',\n      fontSize: '13px',\n      fontWeight: 700,\n    },\n    cardDescriptmark2: {\n      color: 'slategrey',\n      paddingLeft :'7px',      \n      fontSize: '10px'\n    },\n    card: {\n      color: '#06F701',\n      fontFamily: 'Arial',\n      paddingLeft :'2px',   \n      fontWeight: 550,\n      fontSize: '13px'\n    },\n    buttonx: {\n      backgroundcolor: '#8381BE',\n      bordercolor: '#8381BE'\n    },\n  });\n\n  const classes = uStyles();\n\n  return (\n    <Form\n      labelCol={{ span: 7 }}\n      wrapperCol={{ span: 37 }}\n      form={form}\n      name=\"onboard\"\n      initialValues={initialValues}\n      onFinish={onFinish}\n    >\n\n      {/* token and ref */}\n\n      <Form.Item name=\"proaddr\" label=\"Stuff_up\" rules={[{ required: false }]}>\n        <Input placeholder={DEFAULT_PROADDR} />\n      </Form.Item>\n\n      {/* Submit */}\n      <Form.Item label=\" \" colon={false}>\n        <Button type=\"primary\" disabled={!stuff.conngoes} htmlType=\"submit\">\n          <LoginOutlined />\n          Submit and sign\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default BoardForm;\n","import React from \"react\";\nimport { Card, Layout, PageHeader } from \"antd\";\nimport { DashboardTwoTone } from \"@ant-design/icons\";\nimport { useState } from 'react';\nimport BoardForm from \"./BoardForm\";\nimport BoardFm from \"./BoardFm\";\n\nconst { Content } = Layout;\n\nfunction Onboard() {\n  const [conngoes, setConngoes] = useState(false);\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Content style={{ padding: \"0 50px\" }}>\n        <PageHeader\n          title=\"Contract administration\"\n          avatar={{ icon: <DashboardTwoTone /> }}\n        />\n        <Card title=\"My Investment\" id=\"onboard-card\">\n          <BoardForm conngoes={conngoes} setConngoes={setConngoes}/>\n        </Card>\n        <Card title=\"one more\" id=\"onboard-fm\">\n          <BoardFm conngoes={conngoes}/>\n        </Card>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default Onboard;\n","import Onboard from \"./Onboard\";\nexport default Onboard;\n","import React from \"react\";\nimport Onboard from \"./Onboard\";\n\n\nfunction App() {\n  return (<Onboard />);\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./assets/css/app.css\";\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}