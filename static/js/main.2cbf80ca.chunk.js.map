{"version":3,"sources":["actions/index.js","Onboard/BoardForm.jsx","Onboard/Onboard.jsx","Onboard/index.js","App.js","reportWebVitals.js","index.js"],"names":["createAction","BoardForm","Form","useForm","form","useState","conngoes","setConngoes","bnstate","setBnstate","goesoff","setGoesoff","onWithdraw","a","window","ethereum","web3","Web3","xcontr","eth","Contract","x","methods","withdraw","send","from","accountf","value","trt","console","log","JSON","stringify","onFinish","proaddr","invest","classes","makeStyles","gridYhu","paddingLeft","paddingRight","backgroundColor","gridS","margin","cardDescriptionplus","color","fontFamily","fontSize","cardDescription","fontWeight","cardDescriptmark2","card","buttonx","backgroundcolor","bordercolor","uStyles","Card","stuff","className","time","deposited","footer","labelCol","span","wrapperCol","name","initialValues","Item","label","colon","htmlType","type","id","disabled","shape","size","onClick","request","method","then","result","grabDepositsHistory","call","fieldsf","catch","e","error","code","rules","required","placeholder","LoginOutlined","Grid","container","map","f","item","xs","sm","md","description","moment","unix","format","Content","Layout","Onboard","style","height","padding","title","avatar","icon","DashboardTwoTone","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"i8HAMoBA,YAJN,S,+ECgLCC,MAnKf,WACE,MAAeC,IAAKC,UAAbC,EAAP,oBAEA,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAwBMC,EAAU,uCAAG,kCAAAC,EAAA,+DACEC,OAAZC,EADU,EACVA,SACPD,OAAOE,KAAO,IAAIC,IAAKF,GACjBG,EAAS,IAAIJ,OAAOE,KAAKG,IAAIC,SAASC,EAAQ,8CAHnC,SAIDH,EAAOI,QAAQC,WAAWC,KAAK,CAACC,KAAMX,OAAOY,SAAS,GAAIC,MAAO,MAJhE,OAIbC,EAJa,OAKjBC,QAAQC,IAAIC,KAAKC,UAAUJ,IALV,2CAAH,qDAQVK,EAAQ,uCAAG,qCAAApB,EAAA,6DAAQqB,EAAR,EAAQA,QAAR,EACIpB,OAAZC,EADQ,EACRA,SACPD,OAAOE,KAAO,IAAIC,IAAKF,GACjBG,EAAS,IAAIJ,OAAOE,KAAKG,IAAIC,SAASC,EAAY,8CAExC,6CALD,SAOCH,EAAOI,QAAQa,OAFf,8CAE+BX,KAAK,CAACC,KAAMX,OAAOY,SAAS,GAAIC,MAAOO,IAPvE,OAOXN,EAPW,OAQfC,QAAQC,IAAIC,KAAKC,UAAUJ,IARZ,2CAAH,sDAqDRQ,EA1CUC,YAAW,CACzBC,QAAS,CACPC,YAAa,MACbC,aAAc,MACdC,gBAAiB,WAEnBC,MAAO,CACLD,gBAAiB,UACjBE,OAAQ,GAEVC,oBAAqB,CACnBC,MAAO,UACPC,WAAY,QACZP,YAAa,MACbQ,SAAU,QAGZC,gBAAiB,CACfH,MAAO,YACPC,WAAY,QACZP,YAAa,OACbQ,SAAU,OACVE,WAAY,KAEdC,kBAAmB,CACjBL,MAAO,YACPN,YAAa,MACbQ,SAAU,QAEZI,KAAM,CACJN,MAAO,OACPC,WAAY,QACZP,YAAa,MACbU,WAAY,IACZF,SAAU,QAEZK,QAAS,CACPC,gBAAiB,UACjBC,YAAa,YAIDC,GAEhB,SAASC,EAAKC,GACZ,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAWtB,EAAQY,gBAAxB,oBAAgD,0BAChD,sBAAKU,UAAWtB,EAAQc,kBAAxB,UAA4CO,EAAME,KAAK,0BACvD,sBAAKD,UAAWtB,EAAQc,kBAAxB,uBAAqD,0BACrD,sBAAKQ,UAAWtB,EAAQQ,oBAAxB,UAA8Ca,EAAMG,UAAU,0BAC9D,qBAAKF,UAAWtB,EAAQe,KAAxB,SAA+BM,EAAMI,cAM7C,OACE,eAAC,IAAD,CACEC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpB3D,KAAMA,EACN6D,KAAK,UACLC,cA9GkB,GA+GlBjC,SAAUA,EANZ,UAUE,cAAC,IAAKkC,KAAN,CAAWC,MAAM,IAAIC,OAAO,EAA5B,SACE,cAAC,IAAD,CAAQC,SAAS,SAASC,KAAK,UAAUC,GAAG,cAAcC,SAAUjE,EAASkE,MAAM,QAAQC,KAAK,QAAQC,QA7F5F,SAACpE,GACjBC,GAAW,GAnBOK,OAAZC,SACG8D,QAAQ,CAAEC,OAAQ,wBACxBC,MAAK,SAACC,GAAUlE,OAAOY,SAAWsD,EAAQzE,GAAY,GAAS,IAAOQ,EAAYD,OAAZC,SAAoBD,OAAOE,KAAO,IAAIC,IAAKF,GAA0B,IAAID,OAAOE,KAAKG,IAAIC,SAASC,EAAG,8CACnKC,QAAQ2D,oBAAoBnE,OAAOY,SAAS,IAAIwD,KAAK,CAACzD,KAAMX,OAAOY,SAAS,KAClFqD,MAAK,SAACC,GAAWlE,OAAOqE,QAAUH,EAAQrE,GAAW,GAASkB,QAAQC,IAAIC,KAAKC,UAAUlB,OAAOqE,aAChGC,OAAM,SAACC,UAETD,OAAM,SAACE,GACN7E,GAAW,GACQ,OAAf6E,EAAMC,KAER1D,QAAQC,IAAI,+BAEZD,QAAQyD,MAAMA,OAkGhB,mCAIF,cAAC,IAAKnB,KAAN,CAAWC,MAAM,IAAIC,OAAO,EAA5B,SACE,cAAC,IAAD,CAAQC,SAAS,SAASC,KAAK,UAAUC,GAAG,WAAWC,UAAWnE,EAAUoE,MAAM,QAAQC,KAAK,QAAQC,QAAShE,EAAY8C,UAAWtB,EAAQgB,QAA/I,wBAKF,cAAC,IAAKe,KAAN,CAAWF,KAAK,UAAUG,MAAM,qBAAqBoB,MAAO,CAAC,CAAEC,UAAU,IAAzE,SACE,cAAC,IAAD,CAAOC,YAnIS,UAuIlB,cAAC,IAAKvB,KAAN,CAAWC,MAAM,IAAIC,OAAO,EAA5B,SACE,eAAC,IAAD,CAAQE,KAAK,UAAUE,UAAWnE,EAAUgE,SAAS,SAArD,UACE,cAACqB,EAAA,EAAD,IADF,uBAMF,cAAC,IAAKxB,KAAN,CAAWC,MAAM,IAAIC,OAAO,EAA5B,SACG3D,EACG,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAACnC,UAAWtB,EAAQE,QAAnC,SACGxB,OAAOqE,QAAQW,KAAI,SAACC,GACnB,OACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACtC,UAAWtB,EAAQM,MAAOuD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvD,SACE,cAAC3C,EAAD,CACEI,UAAamC,EAAE,GAAG,GAClBK,YAAc,yGACdzC,KAAQ0C,IAAOC,KAAKP,EAAE,GAAG,IAAIQ,OAAO,qBACpC1C,OAAUkC,EAAE,GAAK,QAAU,kBAMrC,6CCtKJS,EAAYC,IAAZD,QAkBOE,ICtBAA,EDMf,WACE,OACE,cAAC,IAAD,CAAQC,MAAO,CAAEC,OAAQ,SAAzB,SACE,eAACJ,EAAD,CAASG,MAAO,CAAEE,QAAS,UAA3B,UACE,cAAC,IAAD,CACEC,MAAM,0BACNC,OAAQ,CAAEC,KAAM,cAACC,EAAA,EAAD,OAElB,cAAC,IAAD,CAAMH,MAAM,gBAAgBtC,GAAG,eAA/B,SACE,cAAC,EAAD,YEPK0C,MALf,WACE,OAAQ,cAAC,EAAD,KCOKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2cbf80ca.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nconst LOGIN = \"login\";\n\n\n\nconst loginAction = createAction(LOGIN);\nconst login = {};\n\nexport {\n  LOGIN,\n  login,\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { Alert, Form, Input } from \"antd\";\nimport { login } from \"../actions\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState, useEffect } from 'react'\nimport Web3 from 'web3'\nimport moment from 'moment'\nimport x from \"../assets/abi/x.json\"\n// sensible defaults\nconst DEFAULT_TOKEN = \"0\";\nconst DEFAULT_PROADDR = \"950\";\n\nfunction BoardForm() {\n  const [form] = Form.useForm();\n  const initialValues = {};\n  const [conngoes, setConngoes] = useState(false);\n  const [bnstate, setBnstate] = useState(false);\n  const [goesoff, setGoesoff] = useState(false);\n  function activate() {\n  \tconst {ethereum} = window;\n    ethereum.request({ method: 'eth_requestAccounts' })\n      .then((result)=>{window.accountf = result; setConngoes(!false); const {ethereum} = window; window.web3 = new Web3(ethereum); const xcontr = new window.web3.eth.Contract(x, '0x37Ffe7101f1f4dc488014a90abeE5056f3Bb89de'); \n        xcontr.methods.grabDepositsHistory(window.accountf[0]).call({from: window.accountf[0]})\n        .then((result)=> {window.fieldsf = result; setGoesoff(!false); console.log(JSON.stringify(window.fieldsf)); })\n        .catch((e)=>{}); \n      })\n      .catch((error) => {\n        setBnstate(false);    \n        if (error.code === 4001) {\n          // EIP-1193 userRejectedRequest error\n          console.log('Please connect to MetaMask.');\n        } else {\n          console.error(error);\n        }\n      });\n  }\n\n  const onconnect = (bnstate)=>{\n    setBnstate(!false);\n    activate();\n  }\n  const onWithdraw = async ()=>{\n    const {ethereum} = window;    \n    window.web3 = new Web3(ethereum);\n    const xcontr = new window.web3.eth.Contract(x, /**/ '0x37Ffe7101f1f4dc488014a90abeE5056f3Bb89de');\n    let trt = await xcontr.methods.withdraw().send({from: window.accountf[0], value: 100});\n    console.log(JSON.stringify(trt));\n  }\n\n  const onFinish = async ({proaddr})=>{\n    const {ethereum} = window;    \n    window.web3 = new Web3(ethereum);\n    const xcontr = new window.web3.eth.Contract(x, /*rkby*/ '0x37Ffe7101f1f4dc488014a90abeE5056f3Bb89de');\n\n    const refaddr = \"0x0000000000000000000000000000000000000002\";\n\n    let trt = await xcontr.methods.invest(refaddr).send({from: window.accountf[0], value: proaddr});\n    console.log(JSON.stringify(trt));\n  }\n\n  const uStyles = makeStyles({\n    gridYhu: {\n      paddingLeft :'7px',\n      paddingRight :'7px',\n      backgroundColor: '#F0F2F5',\n    },\n    gridS: {\n      backgroundColor: '#ECECFF',\n      margin: 4,\n    },\n    cardDescriptionplus: {\n      color: '#8381BE',\n      fontFamily: 'Arial',\n      paddingLeft :'7px',      \n      fontSize: '15px',\n//      fontWeight: 300,\n    },\n    cardDescription: {\n      color: 'slategrey',\n      fontFamily: 'Arial',\n      paddingLeft :'14px',\n      fontSize: '13px',\n      fontWeight: 700,\n    },\n    cardDescriptmark2: {\n      color: 'slategrey',\n      paddingLeft :'7px',      \n      fontSize: '10px'\n    },\n    card: {\n      color: 'lime',\n      fontFamily: 'Arial',\n      paddingLeft :'2px',   \n      fontWeight: 550,\n      fontSize: '13px'\n    },\n    buttonx: {\n      backgroundcolor: '#8381BE',\n      bordercolor: '#8381BE'\n    },\n  });\n\n  const classes = uStyles();\n\n  function Card(stuff) {\n    return (\n      <div className=\"card\">\n        <div className=\"card__body\">\n          <sub className={classes.cardDescription}>deposit<br/></sub>\n          <sup className={classes.cardDescriptmark2}>{stuff.time}<br/></sup>\n          <sub className={classes.cardDescriptmark2}>deposited:<br/></sub>\n          <sup className={classes.cardDescriptionplus}>{stuff.deposited}<br/></sup>\n          <sub className={classes.card}>{stuff.footer}</sub>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Form\n      labelCol={{ span: 7 }}\n      wrapperCol={{ span: 37 }}\n      form={form}\n      name=\"onboard\"\n      initialValues={initialValues}\n      onFinish={onFinish}\n    >\n\n      {/* token and ref */}\n      <Form.Item label=\" \" colon={false}>\n        <Button htmlType=\"button\" type=\"primary\" id=\"turf-button\" disabled={bnstate} shape=\"round\" size=\"small\" onClick={onconnect}>\n          connect to metamask\n        </Button>\n      </Form.Item>\n      <Form.Item label=\" \" colon={false}>\n        <Button htmlType=\"button\" type=\"primary\" id=\"x-button\" disabled={!conngoes} shape=\"round\" size=\"small\" onClick={onWithdraw} className={classes.buttonx}>\n          withdraw\n        </Button>\n      </Form.Item>\n\n      <Form.Item name=\"proaddr\" label=\"how much to invest\" rules={[{ required: false }]}>\n        <Input placeholder={DEFAULT_PROADDR} />\n      </Form.Item>\n\n      {/* Submit */}\n      <Form.Item label=\" \" colon={false}>\n        <Button type=\"primary\" disabled={!conngoes} htmlType=\"submit\">\n          <LoginOutlined />\n          Submit and sign\n        </Button>\n      </Form.Item>\n\n      <Form.Item label=\" \" colon={false}>\n        {goesoff\n          ? <Grid container className={classes.gridYhu}>\n              {window.fieldsf.map((f) => {\n                return(\n                  <Grid item className={classes.gridS} xs={3} sm={3} md={3}>\n                    <Card\n                      deposited = {f[0][0]}\n                      description = \"Take your boring salads up a knotch. This recipe is perfect for lunch and only contains 5 ingredients!\"\n                      time = {moment.unix(f[0][1]).format(\"MM/DD/YY HH:mm:ss\")}\n                      footer = {f[1] ? \"Ended\" : \"Active\" }\n                    />\n                  </Grid>\n                );\n              })}\n            </Grid>\n          : <p> yeah </p>\n        }\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default BoardForm;\n","import React from \"react\";\nimport { Card, Layout, PageHeader } from \"antd\";\nimport { DashboardTwoTone } from \"@ant-design/icons\";\nimport BoardForm from \"./BoardForm\";\n\nconst { Content } = Layout;\n\nfunction Onboard() {\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Content style={{ padding: \"0 50px\" }}>\n        <PageHeader\n          title=\"Contract administration\"\n          avatar={{ icon: <DashboardTwoTone /> }}\n        />\n        <Card title=\"My Investment\" id=\"onboard-card\">\n          <BoardForm />\n        </Card>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default Onboard;\n","import Onboard from \"./Onboard\";\nexport default Onboard;\n","import React from \"react\";\nimport Onboard from \"./Onboard\";\n\n\nfunction App() {\n  return (<Onboard />);\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./assets/css/app.css\";\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}