{"version":3,"sources":["actions/index.js","Onboard/BoardForm.jsx","Onboard/Onboard.jsx","Onboard/index.js","App.js","reportWebVitals.js","index.js"],"names":["createAction","BoardForm","Form","useForm","form","useState","conngoes","setConngoes","bnstate","setBnstate","onFinish","proaddr","token","a","window","web3","Web3","ethereum","eth","Contract","brander","brandercontr","arr","methods","watchtokarray","console","log","accountf","labelCol","span","wrapperCol","name","initialValues","Item","label","colon","htmlType","type","id","disabled","shape","size","onClick","request","method","then","result","catch","error","code","rules","required","placeholder","LoginOutlined","Content","Layout","Onboard","style","height","padding","title","avatar","icon","CloudUploadOutlined","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o3CAMoBA,YAJN,S,2CC2ECC,MAhEf,WAAsB,IAAD,EACJC,IAAKC,UAAbC,EADY,sBAGaC,oBAAS,GAHtB,mBAGZC,EAHY,KAGFC,EAHE,OAIWF,oBAAS,GAJpB,mBAIZG,EAJY,KAIHC,EAJG,KAwBbC,EAAQ,uCAAG,WAAOC,EAAQC,GAAf,iBAAAC,EAAA,6DACfC,OAAOC,KAAO,IAAIC,IAAKF,OAAOG,UADf,SAEY,IAAIH,OAAOC,KAAKG,IAAIC,SAASC,EAAqB,8CAF9D,OAETC,EAFS,OAGTC,EAAMD,EAAaE,QAAQC,gBACjCC,QAAQC,IAAI,6BAA6BZ,OAAOa,SAAS,+BAA+BL,GAJzE,2CAAH,wDAOd,OACE,eAAC,IAAD,CACEM,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBzB,KAAMA,EACN2B,KAAK,UACLC,cAnCkB,GAoClBtB,SAAUA,EANZ,UAUE,cAAC,IAAKuB,KAAN,CAAWC,MAAM,IAAIC,OAAO,EAA5B,SACE,cAAC,IAAD,CAAQC,SAAS,SAASC,KAAK,UAAUC,GAAG,cAAcC,SAAU/B,EAASgC,MAAM,QAAQC,KAAK,QAAQC,QAvB5F,SAAClC,GACjBC,GAAW,GAdZK,OAAOG,SAAS0B,QAAQ,CAAEC,OAAQ,wBAChCC,MAAK,SAACC,EAAOxC,GAAYQ,OAAOa,SAAWmB,EAAQvC,GAAY,MAC/DwC,OAAM,SAACC,EAAMxC,GACZC,GAAW,GACQ,OAAfuC,EAAMC,KAERxB,QAAQC,IAAI,+BAEZD,QAAQuB,MAAMA,OA4Bd,oCAIF,cAAC,IAAKf,KAAN,CAAWF,KAAK,QAAQG,MAAM,QAAQgB,MAAO,CAAC,CAAEC,UAAU,IAA1D,SACE,cAAC,IAAD,CAAOC,YApDO,iDAsDhB,cAAC,IAAKnB,KAAN,CAAWF,KAAK,UAAUG,MAAM,UAAUgB,MAAO,CAAC,CAAEC,UAAU,IAA9D,SACE,cAAC,IAAD,CAAOC,YAtDS,iDAyDlB,cAAC,IAAKnB,KAAN,CAAWC,MAAM,IAAIC,OAAO,EAA5B,SACE,eAAC,IAAD,CAAQE,KAAK,UAAUE,UAAWjC,EAAU8B,SAAS,SAArD,UACE,cAACiB,EAAA,EAAD,IADF,2BC/DAC,EAAYC,IAAZD,QAkBOE,ICtBAA,EDMf,WACE,OACE,cAAC,IAAD,CAAQC,MAAO,CAAEC,OAAQ,SAAzB,SACE,eAACJ,EAAD,CAASG,MAAO,CAAEE,QAAS,UAA3B,UACE,cAAC,IAAD,CACEC,MAAM,0BACNC,OAAQ,CAAEC,KAAM,cAACC,EAAA,EAAD,OAElB,cAAC,IAAD,CAAMH,MAAM,4BAA4BtB,GAAG,eAA3C,SACE,cAAC,EAAD,YEPK0B,MALf,WACE,OAAQ,cAAC,EAAD,KCOKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fb1ca113.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nconst LOGIN = \"login\";\n\n\n\nconst loginAction = createAction(LOGIN);\nconst login = {};\n\nexport {\n  LOGIN,\n  login,\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { Alert, Form, Input } from \"antd\";\nimport { login } from \"../actions\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport { useState, useEffect } from 'react'\nimport Web3 from 'web3'\nimport brander from \"../assets/abi/brander.json\"\n// sensible defaults\nconst DEFAULT_TOKEN = \"0x570215116714E113592ac8ef87C6ABfd176d705e\";\nconst DEFAULT_PROADDR = \"0xe1CcF78C6E26c45c4e4A5584C19a2e5b2009536E\";\n\n\nfunction BoardForm() {\n  const [form] = Form.useForm();\n  const initialValues = {};\n  const [conngoes, setConngoes] = useState(false);\n  const [bnstate, setBnstate] = useState(false);\n\nfunction activate()  {\n   window.ethereum.request({ method: 'eth_requestAccounts' })\n    .then((result,conngoes)=>{window.accountf = result; setConngoes(!false);})\n    .catch((error,bnstate) => {\n      setBnstate(false);    \n      if (error.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        console.log('Please connect to MetaMask.');\n      } else {\n        console.error(error);\n      }\n    });\n}\n\n  const onconnect = (bnstate)=>{\n    setBnstate(!false);\n    activate();\n  }\n  const onFinish = async (proaddr,token)=>{\n    window.web3 = new Web3(window.ethereum);\n    const brandercontr = await new window.web3.eth.Contract(brander, /*rinkeby*/ '0x01b4091244791Ca6b6e82ACC9894d4Af3B93F0eE');\n    const arr = brandercontr.methods.watchtokarray();\n    console.log('metamask accounts array : ',window.accountf,\"  return of watchtokarray : \",arr);\n  }\n\n  return (\n    <Form\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 14 }}\n      form={form}\n      name=\"onboard\"\n      initialValues={initialValues}\n      onFinish={onFinish}\n    >\n\n      {/* token and ref */}\n      <Form.Item label=\" \" colon={false}>\n        <Button htmlType=\"button\" type=\"primary\" id=\"turf-button\" disabled={bnstate} shape=\"round\" size=\"small\" onClick={onconnect}>\n          connetct to metamask\n        </Button>\n      </Form.Item>\n      <Form.Item name=\"token\" label=\"Token\" rules={[{ required: false }]}>\n        <Input placeholder={DEFAULT_TOKEN} />\n      </Form.Item>\n      <Form.Item name=\"proaddr\" label=\"Project\" rules={[{ required: false }]}>\n        <Input placeholder={DEFAULT_PROADDR} />\n      </Form.Item>\n      {/* Submit */}\n      <Form.Item label=\" \" colon={false}>\n        <Button type=\"primary\" disabled={!conngoes} htmlType=\"submit\">\n          <LoginOutlined />\n          Submit and sign\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default BoardForm;\n","import React from \"react\";\nimport { Card, Layout, PageHeader } from \"antd\";\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\nimport BoardForm from \"./BoardForm\";\n\nconst { Content } = Layout;\n\nfunction Onboard() {\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Content style={{ padding: \"0 50px\" }}>\n        <PageHeader\n          title=\"Contract administration\"\n          avatar={{ icon: <CloudUploadOutlined /> }}\n        />\n        <Card title=\"add new token or project \" id=\"onboard-card\">\n          <BoardForm />\n        </Card>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default Onboard;\n","import Onboard from \"./Onboard\";\nexport default Onboard;\n","import React from \"react\";\nimport Onboard from \"./Onboard\";\n\n\nfunction App() {\n  return (<Onboard />);\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./assets/css/app.css\";\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}